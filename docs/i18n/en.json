{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "Opinionated, Redux abstraction with built-in immutability, async and more. Heavily dva inspired.",
    "docs": {
      "api/classes/api-classes-actiondataisntplainobjecterror": {
        "title": "API - Errors - ActionDataIsntPlainObjectError",
        "sidebar_label": "ActionDataIsntPlainObjectError"
      },
      "api/classes/api-classes-blockingeffectwithoutmatchingeffecterror": {
        "title": "API - Errors - BlockingEffectWithoutMatchingEffectError",
        "sidebar_label": "BlockingEffectWithoutMatchingEffectError"
      },
      "api/classes/api-classes-duplicatedactiontypeserror": {
        "title": "API - Errors - DuplicateActionTypesError",
        "sidebar_label": "DuplicateActionTypesError"
      },
      "api/classes/api-classes-duplicatedmodelnamespaceerror": {
        "title": "API - Errors - DuplicatedModelNamespaceError",
        "sidebar_label": "DuplicatedModelNamespaceError"
      },
      "api/classes/api-classes-emptynamespaceerror": {
        "title": "API - Errors - EmptyNamespaceError",
        "sidebar_label": "EmptyNamespaceError"
      },
      "api/classes/api-classes-invalidnamespaceerror": {
        "title": "API - Errors - InvalidNamespaceError",
        "sidebar_label": "InvalidNamespaceError"
      },
      "api/classes/api-classes-keyconflictinmergepropserror": {
        "title": "API - Errors - KeyConflictInMergePropsError",
        "sidebar_label": "KeyConflictInMergePropsError"
      },
      "api/classes/api-classes-model": {
        "title": "API - Classes - Model",
        "sidebar_label": "Model"
      },
      "api/classes/api-classes-modelnotreduxinitializederror": {
        "title": "API - Errors - ModelNotReduxInitializedError",
        "sidebar_label": "ModelNotReduxInitializedError"
      },
      "api/classes/api-classes-modelnotsagainitializederror": {
        "title": "API - Errors - ModelNotSagaInitializedError",
        "sidebar_label": "ModelNotSagaInitializedError"
      },
      "api/classes/api-classes-namespaceisntastringerror": {
        "title": "API - Errors - NamespaceIsntAStringError",
        "sidebar_label": "NamespaceIsntAStringError"
      },
      "api/classes/api-classes-noncompatibleactionerror": {
        "title": "API - Errors - NonCompatibleActionError",
        "sidebar_label": "NonCompatibleActionError"
      },
      "api/classes/api-classes-undefinedblockingsagaeffecterror": {
        "title": "API - Errors - UndefinedBlockingSagaEffectError",
        "sidebar_label": "UndefinedBlockingSagaEffectError"
      },
      "api/classes/api-classes-undefinedreduceroreffecterror": {
        "title": "API - Errors - UndefinedReducerOrEffectError",
        "sidebar_label": "UndefinedReducerOrEffectError"
      },
      "api/classes/api-classes-undefinedsagaeffecterror": {
        "title": "API - Errors - UndefinedSagaEffectError",
        "sidebar_label": "UndefinedSagaEffectError"
      },
      "api/classes/api-classes-undefinedselectorerror": {
        "title": "API - Errors - UndefinedSelectorError",
        "sidebar_label": "UndefinedSelectorError"
      },
      "api/interfaces/actioncreator": {
        "title": "api/interfaces/actioncreator"
      },
      "api/interfaces/actioninternals": {
        "title": "api/interfaces/actioninternals"
      },
      "api/interfaces/actionwithpayload": {
        "title": "api/interfaces/actionwithpayload"
      },
      "api/interfaces/effectmapobject": {
        "title": "api/interfaces/effectmapobject"
      },
      "api/interfaces/api-interfaces-model-options": {
        "title": "API - Interfaces - ModelOptions",
        "sidebar_label": "ModelOptions"
      },
      "api/api-index": {
        "title": "API - Index",
        "sidebar_label": "Index"
      },
      "concepts": {
        "title": "Concepts"
      },
      "development": {
        "title": "Development"
      },
      "faq": {
        "title": "FAQ"
      },
      "headers/classes/api-classes-actiondataisntplainobjecterror": {
        "title": "API - Errors - ActionDataIsntPlainObjectError",
        "sidebar_label": "ActionDataIsntPlainObjectError"
      },
      "headers/classes/api-classes-blockingeffectwithoutmatchingeffecterror": {
        "title": "API - Errors - BlockingEffectWithoutMatchingEffectError",
        "sidebar_label": "BlockingEffectWithoutMatchingEffectError"
      },
      "headers/classes/api-classes-duplicatedactiontypeserror": {
        "title": "API - Errors - DuplicateActionTypesError",
        "sidebar_label": "DuplicateActionTypesError"
      },
      "headers/classes/api-classes-duplicatedmodelnamespaceerror": {
        "title": "API - Errors - DuplicatedModelNamespaceError",
        "sidebar_label": "DuplicatedModelNamespaceError"
      },
      "headers/classes/api-classes-emptynamespaceerror": {
        "title": "API - Errors - EmptyNamespaceError",
        "sidebar_label": "EmptyNamespaceError"
      },
      "headers/classes/api-classes-invalidnamespaceerror": {
        "title": "API - Errors - InvalidNamespaceError",
        "sidebar_label": "InvalidNamespaceError"
      },
      "headers/classes/api-classes-keyconflictinmergepropserror": {
        "title": "API - Errors - KeyConflictInMergePropsError",
        "sidebar_label": "KeyConflictInMergePropsError"
      },
      "headers/classes/api-classes-model": {
        "title": "API - Classes - Model",
        "sidebar_label": "Model"
      },
      "headers/classes/api-classes-modelnotreduxinitializederror": {
        "title": "API - Errors - ModelNotReduxInitializedError",
        "sidebar_label": "ModelNotReduxInitializedError"
      },
      "headers/classes/api-classes-modelnotsagainitializederror": {
        "title": "API - Errors - ModelNotSagaInitializedError",
        "sidebar_label": "ModelNotSagaInitializedError"
      },
      "headers/classes/api-classes-namespaceisntastringerror": {
        "title": "API - Errors - NamespaceIsntAStringError",
        "sidebar_label": "NamespaceIsntAStringError"
      },
      "headers/classes/api-classes-noncompatibleactionerror": {
        "title": "API - Errors - NonCompatibleActionError",
        "sidebar_label": "NonCompatibleActionError"
      },
      "headers/classes/api-classes-undefinedblockingsagaeffecterror": {
        "title": "API - Errors - UndefinedBlockingSagaEffectError",
        "sidebar_label": "UndefinedBlockingSagaEffectError"
      },
      "headers/classes/api-classes-undefinedreduceroreffecterror": {
        "title": "API - Errors - UndefinedReducerOrEffectError",
        "sidebar_label": "UndefinedReducerOrEffectError"
      },
      "headers/classes/api-classes-undefinedsagaeffecterror": {
        "title": "API - Errors - UndefinedSagaEffectError",
        "sidebar_label": "UndefinedSagaEffectError"
      },
      "headers/classes/api-classes-undefinedselectorerror": {
        "title": "API - Errors - UndefinedSelectorError",
        "sidebar_label": "UndefinedSelectorError"
      },
      "headers/interfaces/api-interfaces-model-options": {
        "title": "API - Interfaces - ModelOptions",
        "sidebar_label": "ModelOptions"
      },
      "headers/api-index": {
        "title": "API - Index",
        "sidebar_label": "Index"
      },
      "hooks": {
        "title": "Hooks"
      },
      "introduction": {
        "title": "Introduction"
      },
      "redux-integration": {
        "title": "Integrating with Redux/Redux Saga"
      },
      "testing": {
        "title": "Testing"
      },
      "tutorial": {
        "title": "Tutorial"
      },
      "typescript": {
        "title": "Typescript"
      }
    },
    "links": {
      "Docs": "Docs",
      "API": "API",
      "GitHub": "GitHub"
    },
    "categories": {
      "Introduction": "Introduction",
      "Getting Started": "Getting Started",
      "Testing": "Testing",
      "Contributing": "Contributing",
      "FAQ": "FAQ",
      "API": "API",
      "Interfaces": "Interfaces",
      "Classes": "Classes",
      "Error Classes": "Error Classes"
    }
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
